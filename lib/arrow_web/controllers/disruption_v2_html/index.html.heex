<div class="row my-3">
  <.navbar
    page={Controller.current_path(@conn, %{})}
    create_disruption_permission?={Permissions.authorize?(:create_disruption, @user)}
  />
  <%= form_tag(Controller.current_path(@conn), method: "get", class: "col-3") do %>
    <div class="input-group">
      <%= for {name, value} <- Filters.to_params(@filters) |> Map.delete("search") do %>
        <%= if is_list(value) do %>
          <%= for v <- value do %>
            <input type="hidden" name={"#{name}[]"} value={v} />
          <% end %>
        <% else %>
          <input type="hidden" name={name} value={value} />
        <% end %>
      <% end %>
      <input
        type="text"
        name="search"
        class="form-control"
        placeholder="search"
        value={@filters.search}
      />

      <div class="input-group-append">
        <button type="submit" class="btn btn-outline-secondary" title="search">ðŸ”Ž</button>
      </div>
    </div>
  <% end %>
</div>

<div class="row my-3">
  <div class="col flex">
    <%= for kind <- disruption_kinds() do %>
      <% show_as_active? = MapSet.size(@filters.kinds) == 0 or kind in @filters.kinds %>
      <% active_class = if(show_as_active?, do: "active", else: "") %>

      <.link
        class={"d-flex mr-1 m-disruption-index__route_filter #{active_class}"}
        aria-label={kind |> to_string() |> String.replace("_", " ")}
        href={update_filters_path(@conn, Filters.toggle_kind(@filters, kind))}
      >
        {disruption_kind_icon(@conn, kind, "lg")}
      </.link>
    <% end %>

    <%= if not Filters.calendar?(@filters) do %>
      {link("include past",
        class:
          "mx-2 btn btn-outline-secondary" <>
            if(@filters.view.include_past?, do: " active", else: ""),
        to: update_view_path(@conn, @filters, :include_past?, !@filters.view.include_past?)
      )}
    <% end %>

    {link("approved",
      class:
        "mx-2 btn btn-outline-secondary" <>
          if(@filters.only_approved?, do: " active", else: ""),
      to: update_filters_path(@conn, Filters.toggle_only_approved(@filters))
    )}

    {link("â¬’ #{if(Filters.calendar?(@filters), do: "list", else: "calendar")} view",
      class: "ml-auto btn btn-outline-secondary",
      to: update_filters_path(@conn, Filters.toggle_view(@filters))
    )}
  </div>
</div>

<div class="row">
  <div class="col">
    <%= if Filters.calendar?(@filters) do %>
      <div class="my-3">
        {react_component("Components.DisruptionCalendar", DCalendar.props(@disruptions))}
      </div>
    <% else %>
      <._table conn={@conn} disruptions={@disruptions} />
    <% end %>
  </div>
</div>
